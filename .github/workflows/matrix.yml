name: Build Pluton
on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    name: ${{ matrix.target }} Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            x86_64-pc-windows-msvc,
            aarch64-unknown-linux-gnu,
            armv7-unknown-linux-gnueabihf,
            x86_64-apple-darwin,
            x86_64-unknown-linux-gnu,
          ]
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Setup MSBuild.exe
        if: matrix.os == 'windows-latest'
        uses: warrenbuckley/Setup-MSBuild@v1

      - name: Setup Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.os }}-deps

      - name: Dependencies
        run: yarn

      - name: Build aarch64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: yarn package-arm64

      - name: Build armv7
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
        run: yarn package-arm

      - name: Build Non-aarch64
        if: matrix.target != 'aarch64-unknown-linux-gnu' && matrix.target != 'armv7-unknown-linux-gnueabihf'
        run: yarn package

      - name: Prepare to Deploy
        id: before_deploy
        shell: bash
        run: |
          rm -rf ./release/*.blockmap
          rm -rf ./release/*.zip
          rm -rf ./release/*-unpacked
          rm -rf ./release/mac
          export NAME=$(ls release/pluton-wallet*)
          echo ::set-output name=file_name::${NAME:8}

      # Upload to FTP
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          METHOD: ${{ secrets.FTP_METHOD }}
          PORT: ${{ secrets.FTP_PORT }}
          LOCAL_DIR: ./release
          REMOTE_DIR: /wrkz-bin.bot.tips/pluton
          ARGS: --include-glob=*.pkg --include-glob=*.exe --include-glob=*.AppImage --include-glob=*.dmg
